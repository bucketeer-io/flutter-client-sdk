name: E2E tests

on:
  push:
    branches:
      - main
    paths-ignore:
      - "*.md"
  workflow_dispatch:
  workflow_call:

env:
  FLUTTER_VERSION: "3.24.3"

jobs:
  ios-integration-test:
    runs-on: macos-14-xlarge
    timeout-minutes: 30
    env:
      XCODE_VERSION: '16.2'
    strategy:
      matrix:
        test-group:
          - "general"
          - "optional-configurations"
      fail-fast: false
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Select Xcode version
        run: sudo xcode-select -s '/Applications/Xcode_${{ env.XCODE_VERSION }}.app/Contents/Developer'

      - name: Boot iPhone Simulator
        run: |
          DEVICE_ID=$(xcrun simctl list devices available | grep "iPhone" | head -1 | grep -o "([A-F0-9\\-]*)" | tr -d "()")
          if [ -z "$DEVICE_ID" ]; then
            echo "No iPhone simulators available!"
            exit 1
          fi
          xcrun simctl boot "$DEVICE_ID" || echo "Simulator may already be booted"
          sleep 15
          echo "DEVICE_ID=$DEVICE_ID" >> $GITHUB_ENV

      - name: Cache Cocoapods
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: example/ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('example/ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@f2c4f6686ca8e8d6e6d0f28410eeef506ed66aff # v2.18.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true # Let flutter-action handle caching efficiently

      - name: Install dependencies
        run: |
          flutter pub get
          cd example && flutter pub get

      - name: Run iOS integration tests (${{ matrix.test-group }})
        env:
          BKT_API_KEY: ${{ secrets.BKT_API_KEY }}
          BKT_API_ENDPOINT: ${{ secrets.BKT_API_ENDPOINT }}
          TEST_GROUP: ${{ matrix.test-group }}
          DEVICE_ID: ${{ env.DEVICE_ID }}
        run: |
          if [ "${{ matrix.test-group }}" = "general" ]; then
            TEST_NAME="general test"
          elif [ "${{ matrix.test-group }}" = "optional-configurations" ]; then
            TEST_NAME="optional configurations test"
          fi
          cd example && flutter test -d $DEVICE_ID --dart-define=API_KEY=$BKT_API_KEY --dart-define=API_ENDPOINT=$BKT_API_ENDPOINT integration_test --name="$TEST_NAME"

  android-integration-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        api-level:
          - 33
        target:
          - default
        arch:
          - x86_64
        cores:
          - 8
        test-group:
          - "general"
          - "optional-configurations"
      fail-fast: false
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@f2c4f6686ca8e8d6e6d0f28410eeef506ed66aff # v2.18.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@ac638b010cf58a27ee6c972d7336334ccaf61c96 # v4.4.1
        with:
          cache-cleanup: on-success

      - name: Install dependencies
        run: flutter pub get

      - name: AVD cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.target }}-${{ matrix.arch }}
          restore-keys: |
            avd-${{ matrix.api-level }}-${{ matrix.target }}-
            avd-${{ matrix.api-level }}-

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Create emulator and run e2e test
        uses: reactivecircus/android-emulator-runner@62dbb605bba737720e10b196cb4220d374026a6d # v2.33.0
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          cores: ${{ matrix.cores }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          disable-animations: true
          script: cd example && flutter test --dart-define=API_KEY=$BKT_API_KEY --dart-define=API_ENDPOINT=$BKT_API_ENDPOINT integration_test --name="${{ matrix.test-group == 'general' && 'general test' || 'optional configurations test' }}"
        env:
          BKT_API_KEY: ${{ secrets.BKT_API_KEY }}
          BKT_API_ENDPOINT: ${{ secrets.BKT_API_ENDPOINT }}
          TEST_GROUP: ${{ matrix.test-group }}
          GRADLE_OPTS: -Dorg.gradle.daemon=true -Dorg.gradle.parallel=true -Dorg.gradle.caching=true -Dorg.gradle.jvmargs="-Xmx2g -XX:MaxMetaspaceSize=1g"
