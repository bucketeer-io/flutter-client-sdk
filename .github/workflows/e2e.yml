name: E2E tests

on:
  push:
    branches:
      - main
      - feat/ci-cd-update
    paths-ignore:
      - "*.md"
  workflow_dispatch:
  workflow_call:

env:
  FLUTTER_VERSION: "3.24.3"

jobs:
  ios-integration-test:
    runs-on: macos-15-xlarge
    timeout-minutes: 45
    strategy:
      matrix:
        device:
          # the name of the simulator could be different depending on the macos version you are using
          - "iPhone 16 Simulator (18.0)"
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: "List all simulators"
        run: "xcrun xctrace list devices"

      - name: "Start Simulator"
        # the command "xcrun simctl boot" expects a device identifier
        # the assignment of the UDID variable consists of retrieving the ID of the simulator
        # by extracting it from the command "xcrun xctrace list devices"
        run: |
          UDID=$(xcrun xctrace list devices | grep -m 1 "^${{ matrix.device }}" | awk '{gsub(/[()]/,""); print $NF}')
          echo $UDID
          xcrun simctl boot "${UDID:?No Simulator with this name found}"

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: ${{ runner.tool_cache }}/flutter
          key: ${{ runner.os }}-flutter-install-cache-${{ env.FLUTTER_VERSION }}

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@f2c4f6686ca8e8d6e6d0f28410eeef506ed66aff # v2.18.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Run iOS integration tests
        env:
          BKT_API_KEY: ${{ secrets.BKT_API_KEY }}
          BKT_API_ENDPOINT: ${{ secrets.BKT_API_ENDPOINT }}
        run: make e2e

  android-integration-test:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        api-level:
          - 33
        target:
          - google_apis
        arch:
          - x86_64
        cores:
          - 8
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: ${{ runner.tool_cache }}/flutter
          key: ${{ runner.os }}-flutter-install-cache-${{ env.FLUTTER_VERSION }}

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@f2c4f6686ca8e8d6e6d0f28410eeef506ed66aff # v2.18.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@62dbb605bba737720e10b196cb4220d374026a6d # v2.33.0
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          cores: ${{ matrix.cores }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching"

      - name: Run Android integration tests
        env:
          BKT_API_KEY: ${{ secrets.BKT_API_KEY }}
          BKT_API_ENDPOINT: ${{ secrets.BKT_API_ENDPOINT }}
          GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx1536m -XX:MaxMetaspaceSize=2g"
        uses: reactivecircus/android-emulator-runner@62dbb605bba737720e10b196cb4220d374026a6d # v2.33.0
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          cores: ${{ matrix.cores }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: make e2e
